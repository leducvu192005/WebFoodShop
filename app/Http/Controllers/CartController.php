<?php

namespace App\Http\Controllers;

use App\Models\Cart;
use App\Models\CartItem;
use App\Models\Product;
use Illuminate\Http\Request;

class CartController extends Controller
{
    // üß∫ Hi·ªÉn th·ªã gi·ªè h√†ng
    public function index()
    {
        $user = auth()->user();

        // L·∫•y c√°c s·∫£n ph·∫©m trong gi·ªè c·ªßa ng∆∞·ªùi d√πng
        $cart = CartItem::with('product')
                        ->where('user_id', $user->id)
                        ->get();

        // T√≠nh t·ªïng ti·ªÅn
        $total = 0;
        foreach ($cart as $item) {
            $total += $item->product->price * $item->quantity;
        }

        $shippingFee = 30000; // Ph√≠ v·∫≠n chuy·ªÉn m·∫∑c ƒë·ªãnh

        // Tr·∫£ v·ªÅ view gi·ªè h√†ng
        return view('user.cart.index', compact('cart', 'total', 'shippingFee'));
    }

    // ‚ûï Th√™m s·∫£n ph·∫©m v√†o gi·ªè
    public function addToCart(Request $request, Product $product)
    {
        $user = auth()->user();
        $quantity = $request->input('quantity', 1);

        // üîπ 1. T·∫°o ho·∫∑c l·∫•y gi·ªè h√†ng cho user
        $cart = Cart::firstOrCreate([
            'user_id' => $user->id,
        ]);

        // üîπ 2. Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè ch∆∞a
        $cartItem = CartItem::where('cart_id', $cart->id)
                            ->where('product_id', $product->id)
                            ->first();

        if ($cartItem) {
            $cartItem->quantity += $quantity;
            $cartItem->save();
        } else {
            CartItem::create([
                'user_id' => $user->id,
                'cart_id' => $cart->id,
                'product_id' => $product->id,
                'quantity' => $quantity,
                'price' => $product->price, // ‚úÖ th√™m gi√° s·∫£n ph·∫©m v√†o gi·ªè
            ]);
        }

        return back()->with('success', 'ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!');
    }

    // üîÅ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
    public function update(Request $request, $id)
    {
        $item = CartItem::findOrFail($id);
        $item->quantity = $request->input('quantity', $item->quantity);
        $item->save();

        return redirect()->route('cart.index')->with('success', 'C·∫≠p nh·∫≠t gi·ªè h√†ng th√†nh c√¥ng!');
    }

    // ‚ùå X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè
    public function remove($id)
    {
        $item = CartItem::findOrFail($id);
        $item->delete();

        return redirect()->route('cart.index')->with('success', 'ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng!');
    }
}
